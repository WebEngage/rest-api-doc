swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: 'urn:tos'
  contact:
    email: fazal@webklipper.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
host: api.webengage.net
schemes:
  - http
  - https
produces:
  - application/json
securityDefinitions:
  Authorization:
    description: |
      For accessing the API a valid JWT token must be passed in all the queries in
      the 'Authorization' header.


      A valid JWT token is generated by the API and retourned as answer of a call
      to the route /login giving a valid user & password.


      The following syntax must be used in the 'Authorization' header :

          Bearer: xxxxxx.yyyyyyy.zzzzzz
    type: apiKey
    name: Authorization
    in: header
basePath: /
tags:
  - name: Campaign CRUD operations
    description: All campaign related operations including activate/deactivate
  - name: Funnel CRUD operations
    description: 'This includes create,update,fetch,delete and clone operations of Funnel'
  - name: User Analytics
    description: User analytics apis
  - name: Account Admin Operations
    description: Account Admin Operations
  - name: Channel Stats
    description: Provides all the stats across campaigns for a channel
paths:
  '/v2/accounts/{licenseCode}/admins':
    get:
      tags:
        - Account Admin Operations
      summary: Get list of all new admins for this account
      operationId: getAllNewAccountAdminUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«AccountAdminDtoÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    post:
      tags:
        - Account Admin Operations
      summary: Invite a new admin for this account
      operationId: addAdminUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: accountAdminDto
          description: accountAdminDto
          required: true
          schema:
            $ref: '#/definitions/AccountAdminDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«AccountAdminDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/admins/{publisherUserEId}':
    put:
      tags:
        - Account Admin Operations
      summary: Edit the admin access for an admin
      operationId: editAdminAccessUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: publisherUserEId
          in: path
          description: publisherUserEId
          required: true
          type: string
        - name: shouldInformUser
          in: query
          description: shouldInformUser
          required: false
          type: string
        - name: userRole
          in: query
          description: userRole
          required: true
          type: string
          enum:
            - ADMIN
            - MANAGER
            - EDITOR
            - VIEWER
            - WE_ADMIN_SALES
            - WE_ADMIN_READ
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«AccountAdminDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/campaigns':
    post:
      tags:
        - Campaign CRUD operations
      summary: Create new Campaign
      operationId: createUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: experimentDto
          description: experimentDto
          required: true
          schema:
            $ref: '#/definitions/ExperimentDto'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ExperimentDtoÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/campaigns/{experimentEncodedId}':
    get:
      tags:
        - Campaign CRUD operations
      summary: Get the Campaign for given id
      operationId: getUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: experimentEncodedId
          in: path
          description: experimentEncodedId
          required: true
          type: string
        - name: type
          in: query
          description: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«CampaignDetailsDtoÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    put:
      tags:
        - Campaign CRUD operations
      summary: Update the Campaign
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: experimentEncodedId
          in: path
          description: experimentEncodedId
          required: true
          type: string
        - in: body
          name: experimentDto
          description: experimentDto
          required: true
          schema:
            $ref: '#/definitions/ExperimentDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ExperimentDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    delete:
      tags:
        - Campaign CRUD operations
      summary: Delete the Campaign
      operationId: deleteUsingDELETE_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: experimentEncodedId
          in: path
          description: experimentEncodedId
          required: true
          type: string
        - name: type
          in: query
          description: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/campaigns/{experimentEncodedId}/activate':
    put:
      tags:
        - Campaign CRUD operations
      summary: Activate the Campaign
      operationId: activateUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: experimentEncodedId
          in: path
          description: experimentEncodedId
          required: true
          type: string
        - name: type
          in: query
          description: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ExperimentDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/campaigns/{experimentEncodedId}/deactivate':
    put:
      tags:
        - Campaign CRUD operations
      summary: Deactivate the Campaign
      operationId: deactivateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: experimentEncodedId
          in: path
          description: experimentEncodedId
          required: true
          type: string
        - name: type
          in: query
          description: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ExperimentDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/campaigns/{experimentEncodedId}/schedule':
    get:
      tags:
        - Campaign CRUD operations
      summary: getScheduleInfo
      operationId: getScheduleInfoUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: experimentEncodedId
          in: path
          description: experimentEncodedId
          required: true
          type: string
        - name: type
          in: query
          description: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«CampaignScheduleDtoÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - Campaign CRUD operations
      summary: schedule
      operationId: scheduleUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: experimentEncodedId
          in: path
          description: experimentEncodedId
          required: true
          type: string
        - in: body
          name: campaignScheduleDto
          description: campaignScheduleDto
          required: true
          schema:
            $ref: '#/definitions/CampaignScheduleDto'
        - name: type
          in: query
          description: type
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«CampaignScheduleDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/v2/accounts/{licenseCode}/channels/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: All the Channel Stats
      operationId: overallStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
          enum:
            - CAMPAIGN
            - STANDALONE
            - JOURNEY
            - ONETIME
            - TRIGGERED
            - RECURRING
            - ALL
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/emails/stats':
    post:
      tags:
        - Channel Stats
      summary: Email Stats across campaigns
      operationId: emailStatsUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/in-app/notifications/stats':
    post:
      tags:
        - Channel Stats
      summary: Inapp Notification Stats across campaigns
      operationId: inAppNotifStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/push-notifications/stats':
    post:
      tags:
        - Channel Stats
      summary: Push notifications Stats across campaigns
      operationId: pushNotifStatsUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/sms-messages/stats':
    post:
      tags:
        - Channel Stats
      summary: SMS Stats across campaigns
      operationId: smsStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/stats':
    post:
      tags:
        - Channel Stats
      summary: All the Channel Stats
      operationId: statsUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
        - name: channel
          in: query
          description: channel
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/users/searches':
    get:
      tags:
        - User Analytics
      summary: Get Users for this account
      operationId: getUserUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: segmentId
          in: query
          description: segmentId
          required: false
          type: string
        - name: userType
          in: query
          description: userType
          required: false
          type: string
        - name: query
          in: query
          description: query
          required: false
          type: string
        - name: sortBy
          in: query
          description: sortBy
          required: false
          type: string
        - name: isAscending
          in: query
          description: isAscending
          required: false
          type: boolean
        - name: pageNo
          in: query
          description: pageNo
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: pageSize
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«PageÂ«ApiUserInfoDtoÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/web-push/stats':
    post:
      tags:
        - Channel Stats
      summary: WebPush Stats across campaigns
      operationId: webPushStatsUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/web/notifications/stats':
    post:
      tags:
        - Channel Stats
      summary: Web notifications Stats across campaigns
      operationId: webNotifStatsUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/web/surveys/stats':
    post:
      tags:
        - Channel Stats
      summary: Onsite survey Stats across campaigns
      operationId: onSiteSurveyStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  /accounts/traffic-segments/behaviorOperandFunctions:
    get:
      tags:
        - Traffic Segment Analytics
      summary: behaviorOperandFunctions
      operationId: behaviorOperandFunctionsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«stringÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /accounts/traffic-segments/clipboards:
    get:
      tags:
        - Traffic Segment CRUD operations
      summary: Get Segments from clipboards
      operationId: listClipboardItemsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    delete:
      tags:
        - Traffic Segment CRUD operations
      summary: Remove Segments from clipboards
      operationId: discardClipboardItemsUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: segmentIds
          description: segmentIds
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,stringÂ»Â»'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/all':
    get:
      tags:
        - Traffic Segment CRUD operations
      summary: 'Get all traffic segments for this account, including DRAFT'
      operationId: getAllSegmentsUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«TrafficSegmentInfoDtoÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/copy':
    post:
      tags:
        - Traffic Segment CRUD operations
      summary: Clone Segments
      operationId: cloneSegmentsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: segmentIds
          description: segmentIds
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«ProductCopyDtoÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/count':
    post:
      tags:
        - Traffic Segment Analytics
      summary: getSegmentUserCount
      operationId: getSegmentUserCountUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: trafficSegments
          description: trafficSegments
          required: true
          schema:
            $ref: '#/definitions/TrafficSegmentDto'
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/eventAttributes':
    get:
      tags:
        - Traffic Segment Analytics
      summary: eventAttributes
      operationId: eventAttributesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: eventName
          in: query
          description: eventName
          required: true
          type: string
        - name: category
          in: query
          description: category
          required: true
          type: string
        - name: excludeTypes
          in: query
          description: excludeTypes
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«MapÂ«string,objectÂ»Â»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/events':
    get:
      tags:
        - Traffic Segment Analytics
      summary: events
      operationId: eventsUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: category
          in: query
          description: category
          required: false
          type: string
        - name: type
          in: query
          description: type
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«MapÂ«string,stringÂ»Â»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/eventsAttributeValues':
    get:
      tags:
        - Traffic Segment Analytics
      summary: eventAttributesValues
      operationId: eventAttributesValuesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: eventName
          in: query
          description: eventName
          required: true
          type: string
        - name: attribute
          in: query
          description: attribute
          required: true
          type: string
        - name: category
          in: query
          description: category
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«objectÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/operandValues':
    get:
      tags:
        - Traffic Segment Analytics
      summary: values
      operationId: valuesUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: operand
          in: query
          description: operand
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«stringÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/userAttributeValues':
    get:
      tags:
        - Traffic Segment Analytics
      summary: userAttributeValues
      operationId: userAttributeValuesUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: attribute
          in: query
          description: attribute
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«stringÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/userAttributes':
    get:
      tags:
        - Traffic Segment Analytics
      summary: userAttributes
      operationId: userAttributesUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: excludeTypes
          in: query
          description: excludeTypes
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: category
          in: query
          description: category
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«MapÂ«string,stringÂ»Â»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/{segmentId}/clipboards':
    post:
      tags:
        - Traffic Segment CRUD operations
      summary: Add Segments to clipboards
      operationId: addClipboardsItemUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: segmentId
          in: path
          description: segmentId
          required: true
          type: string
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentEncId}':
    get:
      tags:
        - Traffic Segment CRUD operations
      summary: Get traffic segments by Id
      operationId: getTrafficSegmentUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentEncId
          in: path
          description: trafficSegmentEncId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«TrafficSegmentDetailsDtoÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    post:
      tags:
        - Traffic Segment CRUD operations
      summary: Update a traffic segment
      operationId: updateTrafficSegmentUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: trafficSegment
          description: trafficSegment
          required: true
          schema:
            $ref: '#/definitions/TrafficSegmentDto'
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentEncId
          in: path
          description: trafficSegmentEncId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«TrafficSegmentDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    put:
      tags:
        - Traffic Segment CRUD operations
      summary: Update a traffic segment
      operationId: updateTrafficSegmentUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: trafficSegment
          description: trafficSegment
          required: true
          schema:
            $ref: '#/definitions/TrafficSegmentDto'
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentEncId
          in: path
          description: trafficSegmentEncId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«TrafficSegmentDtoÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentEncId}/count':
    get:
      tags:
        - Traffic Segment Analytics
      summary: getUserCountByTrafficSegmentId
      operationId: getUserCountByTrafficSegmentIdUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentEncId
          in: path
          description: trafficSegmentEncId
          required: true
          type: string
        - name: sdks
          in: query
          description: sdks
          required: false
          type: array
          items:
            type: integer
            format: int32
          collectionFormat: multi
        - name: productType
          in: query
          description: productType
          required: false
          type: string
          enum:
            - SURVEY
            - FEEDBACK
            - NOTIFICATION
            - PUSH_NOTIFICATION
            - EMAIL
            - SMS
            - API_BLOCK
            - WEB_PUSH
            - JOURNEY
            - IN_APP_NOTIFICATION
            - IN_APP_SURVEY
            - ALL
        - name: campaignType
          in: query
          description: campaignType
          required: false
          type: string
          enum:
            - PROMOTIONAL
            - TRANSACTIONAL
        - name: layoutId
          in: query
          description: layoutId
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentEncId}/reachability':
    post:
      tags:
        - Traffic Segment Analytics
      summary: Segment User's Reachable Stats
      operationId: segmentReachableUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentEncId
          in: path
          description: trafficSegmentEncId
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/UserDataAnalyticsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentEncId}/stats':
    post:
      tags:
        - Traffic Segment Analytics
      summary: User Analytics
      operationId: segmentStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentEncId
          in: path
          description: trafficSegmentEncId
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/UserDataAnalyticsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«MapÂ«string,objectÂ»Â»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentId}/campaigns':
    get:
      tags:
        - Traffic Segment CRUD operations
      summary: Get the Campaigns for given traffic segment
      operationId: getCampaignsForTrafficSegmentUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentId
          in: path
          description: trafficSegmentId
          required: true
          type: string
        - name: pageNo
          in: query
          description: pageNo
          required: false
          type: integer
          format: int32
        - name: pageSize
          in: query
          description: pageSize
          required: false
          type: integer
          format: int32
        - name: sort
          in: query
          description: sort
          required: false
          type: string
        - name: from
          in: query
          description: from
          required: false
          type: string
        - name: to
          in: query
          description: to
          required: false
          type: string
        - name: query
          in: query
          description: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«PageÂ«ExperimentStatsDtoÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentId}/link':
    put:
      tags:
        - Traffic Segment CRUD operations
      summary: Link traffic segment from a campaign
      operationId: linkTrafficSegmentUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentId
          in: path
          description: trafficSegmentId
          required: true
          type: string
        - in: body
          name: request
          description: request
          required: true
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«booleanÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentId}/stats':
    get:
      tags:
        - api-traffic-segment-stats-controller
      summary: stats
      operationId: statsUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentId
          in: path
          description: trafficSegmentId
          required: true
          type: string
        - name: q
          in: query
          description: q
          required: true
          type: string
        - name: to
          in: query
          description: to
          required: true
          type: string
        - name: from
          in: query
          description: from
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«TrafficSegmentStatsDtoÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentId}/ts-stats':
    get:
      tags:
        - api-traffic-segment-stats-controller
      summary: tsStats
      operationId: tsStatsUsingGET_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentId
          in: path
          description: trafficSegmentId
          required: true
          type: string
        - name: to
          in: query
          description: to
          required: true
          type: string
        - name: from
          in: query
          description: from
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«TrafficSegmentTSStatsDtoÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/accounts/{licenseCode}/traffic-segments/{trafficSegmentId}/unlink':
    put:
      tags:
        - Traffic Segment CRUD operations
      summary: Unlink traffic segment from a campaign
      operationId: unlinkTrafficSegmentUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: trafficSegmentId
          in: path
          description: trafficSegmentId
          required: true
          type: string
        - in: body
          name: request
          description: request
          required: true
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«booleanÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  /data/traffic-segments/refresh-stats:
    get:
      tags:
        - api-traffic-segment-controller
      summary: publishToKafka
      operationId: publishToKafkaUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«ListÂ«stringÂ»Â»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /patch/traffic-segments/status:
    post:
      tags:
        - Traffic Segment CRUD operations
      summary: updateTrafficSegmentWithDraftStatus
      operationId: updateTrafficSegmentWithDraftStatusUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: segmentIds
          description: segmentIds
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: status
          in: query
          description: status
          required: true
          type: string
          enum:
            - PENDING
            - ACTIVE
            - INACTIVE
            - DELETED
            - DRAFT
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«booleanÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - Traffic Segment CRUD operations
      summary: updateTrafficSegmentWithDraftStatus
      operationId: updateTrafficSegmentWithDraftStatusUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: segmentIds
          description: segmentIds
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: status
          in: query
          description: status
          required: true
          type: string
          enum:
            - PENDING
            - ACTIVE
            - INACTIVE
            - DELETED
            - DRAFT
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«booleanÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/v2/accounts/{licenseCode}/emails/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: Overall/Timeseries Email Stats across campaigns based on containerType
      operationId: emailStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/in-app/notifications/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: Overall/Timeseries Inapp Notification Stats across campaigns based on containerType
      operationId: inAppNotifStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/overall-stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: All the Channel Stats
      operationId: overallStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
          enum:
            - CAMPAIGN
            - STANDALONE
            - JOURNEY
            - ONETIME
            - TRIGGERED
            - RECURRING
            - ALL
        - name: channel
          in: query
          description: channel
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/push-notifications/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: Overall/Timeseries Push notifications Stats across campaigns based on containerType
      operationId: pushNotifStatsUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/sms-messages/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: Overall/Timeseries SMS Stats across campaigns based on containerType
      operationId: smsStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/web-push/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: Overall/Timeseries WebPush Stats across campaigns based on containerType
      operationId: webPushStatsUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/web/notifications/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: Overall/Timeseries Web notifications Stats across campaigns based on containerType
      operationId: webNotifStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/web/surveys/stats/{containerType}':
    post:
      tags:
        - Channel Stats
      summary: Overall/Timeseries Onsite survey Stats across campaigns based on containerType
      operationId: onSiteSurveyStatsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: containerType
          in: path
          description: containerType
          required: true
          type: string
        - in: body
          name: criteria
          description: criteria
          required: true
          schema:
            $ref: '#/definitions/ChannelStatsCriteria'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/funnel':
    post:
      tags:
        - Funnel CRUD operations
      summary: Create or Update the Funnel
      operationId: createUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - in: body
          name: funnel
          description: funnel
          required: true
          schema:
            $ref: '#/definitions/Funnel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«FunnelÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/funnel/{funnelEId}':
    get:
      tags:
        - Funnel CRUD operations
      summary: Get Funnel by Id
      operationId: getUsingGET_3
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: funnelEId
          in: path
          description: funnelEId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«FunnelÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    put:
      tags:
        - Funnel CRUD operations
      summary: Create or Update the Funnel
      operationId: updateUsingPUT_3
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: funnelEId
          in: path
          description: funnelEId
          required: true
          type: string
        - in: body
          name: funnel
          description: funnel
          required: true
          schema:
            $ref: '#/definitions/Funnel'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«FunnelÂ»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
    delete:
      tags:
        - Funnel CRUD operations
      summary: Delete Funnel by Id for a given account
      operationId: deleteUsingDELETE_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: funnelEId
          in: path
          description: funnelEId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«objectÂ»'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/funnel/{funnelEId}/clone':
    post:
      tags:
        - Funnel CRUD operations
      summary: Clone Funnel for a given Funnel Id
      operationId: cloneUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: funnelEId
          in: path
          description: funnelEId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«FunnelÂ»'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - Authorization: []
  '/v2/accounts/{licenseCode}/funnel/{funnelEId}/steps/{stepEId}':
    delete:
      tags:
        - Funnel CRUD operations
      summary: Delete Funnel Step by Id for a given account and Funnel
      operationId: deleteStepUsingDELETE_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: licenseCode
          in: path
          description: licenseCode
          required: true
          type: string
        - name: funnelEId
          in: path
          description: funnelEId
          required: true
          type: string
        - name: stepEId
          in: path
          description: stepEId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ApiResponseDtoÂ«objectÂ»'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - Authorization: []
definitions:
  ExperimentJobSentStatsDto:
    type: object
    properties:
      dndQueuedCount:
        type: integer
        format: int32
      failureCount:
        type: integer
        format: int32
      fcQueuedCount:
        type: integer
        format: int32
      status:
        type: string
      successCount:
        type: integer
        format: int32
      totalCount:
        type: integer
        format: int32
  BehavioralTargetOperand:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/BehavioralTargetingEvent'
      logicalOperator:
        type: string
  ReferrerAcquisitionSourceOperand:
    type: object
    properties:
      url:
        $ref: '#/definitions/MultiValuedRuleOperand'
  ContentVariableOperand:
    type: object
    properties:
      operator:
        type: string
      type:
        type: string
      values:
        type: array
        items:
          type: string
      variableName:
        type: string
  ApiResponseDto:
    type: object
    properties:
      data:
        type: object
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  SimpleRuleOperandÂ«intÂ»:
    type: object
    properties:
      value:
        type: integer
        format: int32
  RuleEvent:
    type: object
    properties:
      category:
        type: string
      eventName:
        type: string
      expressions:
        type: array
        items:
          $ref: '#/definitions/MapÂ«string,objectÂ»'
      logicalOperator:
        type: string
  PageSegmentDto:
    type: object
    properties:
      activityName:
        $ref: '#/definitions/MultiValuedRuleOperand'
      activityViews:
        $ref: '#/definitions/ListRuleOperand'
      cookie:
        $ref: '#/definitions/MultiValuedRuleOperand'
      custom:
        $ref: '#/definitions/MultiValuedRuleOperand'
      logicalOperator:
        type: string
      pageViews:
        $ref: '#/definitions/ListRuleOperand'
      url:
        $ref: '#/definitions/MultiValuedRuleOperand'
      wysiwytOperand:
        $ref: '#/definitions/WysiwytOperand'
  GroupCriteria:
    type: object
    properties:
      alias:
        type: string
      name:
        type: string
      type:
        type: string
      attr-category:
        type: string
      category:
        type: string
      event-name:
        type: string
      where:
        $ref: '#/definitions/TrafficSegmentDto'
  ExperimentDto:
    type: object
    properties:
      applyDnd:
        type: boolean
      applyFrequencyCapping:
        type: boolean
      campaignType:
        type: string
        enum:
          - PROMOTIONAL
          - TRANSACTIONAL
      container:
        type: string
        enum:
          - CAMPAIGN
          - STANDALONE
          - JOURNEY
          - ONETIME
          - TRIGGERED
          - RECURRING
          - ALL
      controlGroup:
        type: integer
        format: int32
      conversionId:
        type: string
      createdOn:
        type: string
        format: date-time
      editable:
        type: boolean
      endDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      eventRuleId:
        type: string
      frequency:
        type: integer
        format: int32
      goalId:
        type: integer
        format: int32
      id:
        type: string
      incrementFrequencyCappingCount:
        type: boolean
      isTargetable:
        type: boolean
      licenseCode:
        type: string
      oneTime:
        type: boolean
      order:
        type: integer
        format: int32
      pageRuleId:
        type: string
      queueMessage:
        type: boolean
      sampling:
        type: integer
        format: int32
      scheduler:
        $ref: '#/definitions/SchedulerInfoDto'
      sdks:
        type: array
        items:
          type: integer
          format: int32
      segmentId:
        type: string
      sent:
        type: string
        enum:
          - PENDING
          - SCHEDULED
          - LOADING
          - READY
          - RUNNING
          - PAUSED
          - COMPLETED
          - FAILED
          - ON_GOING
      sentStatus:
        $ref: '#/definitions/ExperimentJobSentStatsDto'
      skipTargetPage:
        type: boolean
      startDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      status:
        type: string
        enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - DELETED
          - OVERWHELMED
      title:
        type: string
      triggerSet:
        $ref: '#/definitions/TriggerSetDto'
      ttl:
        type: integer
        format: int32
      type:
        type: string
        enum:
          - SURVEY
          - FEEDBACK
          - NOTIFICATION
          - PUSH_NOTIFICATION
          - EMAIL
          - SMS
          - API_BLOCK
          - WEB_PUSH
          - JOURNEY
          - IN_APP_NOTIFICATION
          - IN_APP_SURVEY
          - ALL
      variations:
        type: array
        items:
          $ref: '#/definitions/ExperimentVariationDto'
  TriggerSetDto:
    type: object
    properties:
      id:
        type: string
      logical-operator:
        type: string
      triggers:
        type: array
        items:
          $ref: '#/definitions/TriggerDto'
  'MapÂ«string,objectÂ»':
    type: object
    additionalProperties:
      type: object
  'ApiResponseDtoÂ«MapÂ«string,objectÂ»Â»':
    type: object
    properties:
      data:
        type: object
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiResponseDtoÂ«AccountAdminDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/AccountAdminDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  CampaignAcquisitionSourceOperand:
    type: object
    properties:
      campaign_gclid:
        $ref: '#/definitions/ListRuleOperand'
      campaign_medium:
        $ref: '#/definitions/ListRuleOperand'
      campaign_name:
        $ref: '#/definitions/ListRuleOperand'
      campaign_source:
        $ref: '#/definitions/ListRuleOperand'
      campaign_term:
        $ref: '#/definitions/ListRuleOperand'
      logicalOperator:
        type: string
  TrafficSourceOperand:
    type: object
    properties:
      custom:
        $ref: '#/definitions/MultiValuedRuleOperand'
      direct:
        type: boolean
      logicalOperator:
        type: string
      searchEngine:
        $ref: '#/definitions/SearchEngineNode'
      socialMedia:
        type: boolean
  TimeAttributeDto:
    type: object
    properties:
      category:
        type: string
      name:
        type: string
  PaidSearchAcquisitionSourceOperand:
    type: object
    properties:
      logicalOperator:
        type: string
      query:
        $ref: '#/definitions/ListRuleOperand'
      terms:
        $ref: '#/definitions/ListRuleOperand'
  GeoPositionOperand:
    type: object
    properties:
      latitude:
        type: string
      longitude:
        type: string
      radius:
        type: string
  AndroidRuleOperand:
    type: object
    properties:
      apiVersion:
        $ref: '#/definitions/ListRuleOperand'
      appInstallationTime:
        $ref: '#/definitions/ListRuleOperand'
      appVersion:
        $ref: '#/definitions/ListRuleOperand'
      appVersionCode:
        $ref: '#/definitions/ListRuleOperand'
      brand:
        $ref: '#/definitions/ListRuleOperand'
      lastSessionTime:
        $ref: '#/definitions/ListRuleOperand'
      logicalOperator:
        type: string
      manufacturer:
        $ref: '#/definitions/ListRuleOperand'
      model:
        $ref: '#/definitions/ListRuleOperand'
      osVersion:
        $ref: '#/definitions/ListRuleOperand'
      sdkVersion:
        $ref: '#/definitions/ListRuleOperand'
      totalSessions:
        $ref: '#/definitions/ListRuleOperand'
      totalTimeSpent:
        $ref: '#/definitions/ListRuleOperand'
  GeoOperand:
    type: object
    properties:
      expressions:
        type: array
        items:
          $ref: '#/definitions/MapÂ«string,objectÂ»'
      logicalOperator:
        type: string
  SocialAcquisitionSourceOperand:
    type: object
    properties:
      channels:
        $ref: '#/definitions/ListRuleOperand'
  TrafficSegmentDto:
    type: object
    properties:
      acquisition:
        $ref: '#/definitions/UserAcquisitionOperand'
      apiVersion:
        $ref: '#/definitions/ListRuleOperand'
      appInstallationTime:
        $ref: '#/definitions/ListRuleOperand'
      appVersion:
        $ref: '#/definitions/ListRuleOperand'
      appVersionCode:
        $ref: '#/definitions/ListRuleOperand'
      behavior:
        $ref: '#/definitions/BehavioralTargetOperand'
      brand:
        $ref: '#/definitions/ListRuleOperand'
      browser:
        $ref: '#/definitions/BrowserOperand'
      campaignType:
        type: string
        enum:
          - PROMOTIONAL
          - TRANSACTIONAL
      device:
        $ref: '#/definitions/ListRuleOperand'
      devices:
        $ref: '#/definitions/TechnologyOperand'
      geo:
        $ref: '#/definitions/GeoOperand'
      geoPosition:
        $ref: '#/definitions/GeoPositionOperand'
      id:
        type: string
      lastSessionTime:
        $ref: '#/definitions/ListRuleOperand'
      layoutId:
        type: string
      licenseCode:
        type: string
      logicalOperator:
        type: string
      manufacturer:
        $ref: '#/definitions/ListRuleOperand'
      model:
        $ref: '#/definitions/ListRuleOperand'
      name:
        type: string
      operatingSystem:
        $ref: '#/definitions/ListRuleOperand'
      osVersion:
        $ref: '#/definitions/ListRuleOperand'
      privateServiceProvider:
        type: boolean
      processed:
        type: boolean
      productType:
        type: string
        enum:
          - SURVEY
          - FEEDBACK
          - NOTIFICATION
          - PUSH_NOTIFICATION
          - EMAIL
          - SMS
          - API_BLOCK
          - WEB_PUSH
          - JOURNEY
          - IN_APP_NOTIFICATION
          - IN_APP_SURVEY
          - ALL
      reachability:
        $ref: '#/definitions/ListRuleOperand'
      sampling:
        $ref: '#/definitions/SimpleRuleOperandÂ«intÂ»'
      sdkVersion:
        $ref: '#/definitions/ListRuleOperand'
      sdks:
        type: array
        items:
          type: integer
          format: int32
      segment:
        $ref: '#/definitions/ListRuleOperand'
      status:
        type: string
        enum:
          - PENDING
          - ACTIVE
          - INACTIVE
          - DELETED
          - DRAFT
      totalSessions:
        $ref: '#/definitions/ListRuleOperand'
      totalTimeSpent:
        $ref: '#/definitions/ListRuleOperand'
      trafficSource:
        $ref: '#/definitions/TrafficSourceOperand'
      userAttribute:
        $ref: '#/definitions/MultiValuedRuleOperand'
      userIds:
        $ref: '#/definitions/ListRuleOperand'
      visitorType:
        $ref: '#/definitions/SimpleRuleOperandÂ«stringÂ»'
  BrowserOperand:
    type: object
    properties:
      expressions:
        type: array
        items:
          $ref: '#/definitions/MapÂ«string,objectÂ»'
      logicalOperator:
        type: string
  ApiUserAcquisitionDto:
    type: object
    properties:
      campaign_gclid:
        type: string
      campaign_id:
        type: string
      campaign_medium:
        type: string
      campaign_source:
        type: string
      campaign_term:
        type: string
      landing_page:
        type: string
      referrer_host:
        type: string
      referrer_link:
        type: string
      referrer_network:
        type: string
      referrer_query:
        type: string
      referrer_type:
        type: string
      referrer_url:
        type: string
  TriggerDto:
    type: object
    properties:
      id:
        type: string
      timeAttribute:
        $ref: '#/definitions/TimeAttributeDto'
      timeDifference:
        type: string
      type:
        type: string
  SimpleRuleOperandÂ«booleanÂ»:
    type: object
    properties:
      value:
        type: boolean
  SearchEngineNode:
    type: object
    properties:
      logicalOperator:
        type: string
      terms:
        type: array
        items:
          type: string
  WysiwytOperand:
    type: object
    properties:
      contentVariables:
        type: array
        items:
          $ref: '#/definitions/ContentVariableOperand'
      logicalOperator:
        type: string
  ApiResponseDtoÂ«ListÂ«AccountAdminDtoÂ»Â»:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/AccountAdminDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ScrollOperand:
    type: object
    properties:
      type:
        type: string
      value:
        type: integer
        format: int32
  TechnologyOperand:
    type: object
    properties:
      android:
        type: array
        items:
          $ref: '#/definitions/AndroidRuleOperand'
      iOS:
        type: array
        items:
          $ref: '#/definitions/IOSRuleOperand'
      ios:
        type: array
        items:
          $ref: '#/definitions/IOSRuleOperand'
      logicalOperator:
        type: string
      web:
        type: array
        items:
          $ref: '#/definitions/WebRuleOperand'
  IOSRuleOperand:
    type: object
    properties:
      apiVersion:
        $ref: '#/definitions/ListRuleOperand'
      appInstallationTime:
        $ref: '#/definitions/ListRuleOperand'
      appVersion:
        $ref: '#/definitions/ListRuleOperand'
      appVersionCode:
        $ref: '#/definitions/ListRuleOperand'
      lastSessionTime:
        $ref: '#/definitions/ListRuleOperand'
      logicalOperator:
        type: string
      model:
        $ref: '#/definitions/ListRuleOperand'
      osVersion:
        $ref: '#/definitions/ListRuleOperand'
      sdkVersion:
        $ref: '#/definitions/ListRuleOperand'
      totalSessions:
        $ref: '#/definitions/ListRuleOperand'
      totalTimeSpent:
        $ref: '#/definitions/ListRuleOperand'
  MultiValuedRuleOperand:
    type: object
    properties:
      expressions:
        type: array
        items:
          $ref: '#/definitions/MapÂ«string,objectÂ»'
      logicalOperator:
        type: string
  SimpleRuleOperandÂ«stringÂ»:
    type: object
    properties:
      value:
        type: string
  CampaignDetailsDto:
    type: object
    properties:
      conversionDto:
        $ref: '#/definitions/ConversionDto'
      experimentDto:
        $ref: '#/definitions/ExperimentDto'
      experimentTargetingRuleDto:
        $ref: '#/definitions/ExperimentTargetingRuleDto'
  CustomAcquisitionSourceOperand:
    type: object
    properties:
      landing_page:
        $ref: '#/definitions/MultiValuedRuleOperand'
      logicalOperator:
        type: string
      url:
        $ref: '#/definitions/MultiValuedRuleOperand'
  UserAcquisitionOperand:
    type: object
    properties:
      campaign:
        $ref: '#/definitions/CampaignAcquisitionSourceOperand'
      custom:
        $ref: '#/definitions/CustomAcquisitionSourceOperand'
      direct:
        $ref: '#/definitions/SimpleRuleOperandÂ«stringÂ»'
      display:
        $ref: '#/definitions/SimpleRuleOperandÂ«stringÂ»'
      email:
        $ref: '#/definitions/SimpleRuleOperandÂ«stringÂ»'
      logicalOperator:
        type: string
      paidSearch:
        $ref: '#/definitions/PaidSearchAcquisitionSourceOperand'
      phone:
        $ref: '#/definitions/SimpleRuleOperandÂ«stringÂ»'
      referral:
        $ref: '#/definitions/ReferrerAcquisitionSourceOperand'
      search:
        $ref: '#/definitions/SearchAcquisitionSourceOperand'
      social:
        $ref: '#/definitions/SocialAcquisitionSourceOperand'
  WebRuleOperand:
    type: object
    properties:
      browser:
        $ref: '#/definitions/BrowserOperand'
      device:
        $ref: '#/definitions/ListRuleOperand'
      logicalOperator:
        type: string
      operatingSystem:
        $ref: '#/definitions/ListRuleOperand'
  ApiResponseDtoÂ«PageÂ«ApiUserInfoDtoÂ»Â»:
    type: object
    properties:
      data:
        $ref: '#/definitions/PageÂ«ApiUserInfoDtoÂ»'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  EventSegmentDto:
    type: object
    properties:
      customEvent:
        $ref: '#/definitions/CustomEventRuleOperand'
      leaveIntent:
        $ref: '#/definitions/SimpleRuleOperandÂ«booleanÂ»'
      logicalOperator:
        type: string
      scrollOperand:
        $ref: '#/definitions/ScrollOperand'
      timeOfDay:
        $ref: '#/definitions/TimeOfDayOperand'
      timeSpentOnActivity:
        $ref: '#/definitions/SimpleRuleOperandÂ«intÂ»'
      timeSpentOnApp:
        $ref: '#/definitions/SimpleRuleOperandÂ«intÂ»'
      timeSpentOnPage:
        $ref: '#/definitions/SimpleRuleOperandÂ«intÂ»'
      timeSpentOnSite:
        $ref: '#/definitions/SimpleRuleOperandÂ«intÂ»'
  ConversionDto:
    type: object
    properties:
      controlGroup:
        type: integer
        format: int32
      deadline:
        type: string
      endDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      experiment:
        type: string
      id:
        type: string
      journey:
        type: string
      licenseCode:
        type: string
      name:
        type: string
      startDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      status:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
          - DELETED
          - PAUSED
      triggerSet:
        $ref: '#/definitions/TriggerSetDto'
      version:
        type: integer
        format: int32
  SchedulerDto:
    type: object
    properties:
      endDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      id:
        type: string
      identifier:
        type: string
      interval:
        type: array
        items:
          type: integer
          format: int32
      schedule:
        type: string
        enum:
          - ONCE
          - INSTANTANEOUSLY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - QUARTERLY
          - MINUTES
      startDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      time:
        type: string
      timezone:
        type: integer
        format: int32
  UserRoleDto:
    type: object
    required:
      - role
    properties:
      privileges:
        type: array
        items:
          $ref: '#/definitions/RolePrivilegesDto'
      role:
        type: string
        description: User role to be assigned to the new admin
        enum:
          - ADMIN
          - EDITOR
          - MANAGER
          - VIEWER
  ListRuleOperand:
    type: object
    properties:
      operator:
        type: string
      values:
        type: array
        items:
          type: string
  AccountAdminDto:
    type: object
    required:
      - emailId
      - userRole
    properties:
      emailId:
        type: string
        description: Email Id for the invited user
      licenseCode:
        type: string
      publisherUserEId:
        type: string
        description: PublisherUser's Id
      statusStr:
        type: string
      transferredFromEId:
        type: string
      userRole:
        description: User role object
        $ref: '#/definitions/UserRoleDto'
  BehavioralTargetingEvent:
    type: object
    properties:
      attribute:
        type: string
      attributeCategory:
        type: string
      category:
        type: string
      eventName:
        type: string
      filters:
        $ref: '#/definitions/MultiValuedRuleOperand'
      function:
        type: string
      id:
        type: string
      operandType:
        type: string
      operator:
        type: string
      values:
        type: array
        items:
          type: string
  CampaignScheduleDto:
    type: object
    properties:
      applyDnd:
        type: boolean
      applyFrequencyCapping:
        type: boolean
      container:
        type: string
        enum:
          - CAMPAIGN
          - STANDALONE
          - JOURNEY
          - ONETIME
          - TRIGGERED
          - RECURRING
          - ALL
      endDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      frequency:
        type: integer
        format: int32
      incrementFrequencyCappingCount:
        type: boolean
      oneTime:
        type: boolean
      queueMessage:
        type: boolean
      scheduler:
        $ref: '#/definitions/SchedulerDto'
      startDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      triggerSet:
        $ref: '#/definitions/TriggerSetDto'
      ttl:
        type: integer
        format: int32
  TimeOfDayOperand:
    type: object
    properties:
      timeZone:
        type: string
      timings:
        type: array
        items:
          $ref: '#/definitions/MapÂ«string,objectÂ»'
  ExperimentTargetingRuleDto:
    type: object
    properties:
      applyDnd:
        type: boolean
      applyFrequencyCapping:
        type: boolean
      container:
        type: string
        enum:
          - CAMPAIGN
          - STANDALONE
          - JOURNEY
          - ONETIME
          - TRIGGERED
          - RECURRING
          - ALL
      endDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      eventSegmentDto:
        $ref: '#/definitions/EventSegmentDto'
      frequency:
        type: integer
        format: int32
      id:
        type: string
      incrementFrequencyCappingCount:
        type: boolean
      oneTime:
        type: boolean
      pageSegmentDto:
        $ref: '#/definitions/PageSegmentDto'
      queueMessage:
        type: boolean
      scheduler:
        $ref: '#/definitions/SchedulerDto'
      startDate:
        type: string
        example: 'yyyy-MM-dd''T''HH:mm:ssZ'
      trafficSegmentDto:
        $ref: '#/definitions/TrafficSegmentDto'
      triggerSet:
        $ref: '#/definitions/TriggerSetDto'
      ttl:
        type: integer
        format: int32
  PageÂ«ApiUserInfoDtoÂ»:
    type: object
    properties:
      ascending:
        type: boolean
      contents:
        type: array
        items:
          $ref: '#/definitions/ApiUserInfoDto'
      numberOfPages:
        type: integer
        format: int32
      pageNo:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      sortBy:
        type: string
      totalCount:
        type: integer
        format: int32
  ApiResponseDtoÂ«ExperimentDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/ExperimentDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiResponseDtoÂ«CampaignScheduleDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/CampaignScheduleDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ExperimentVariationDto:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      sampling:
        type: number
        format: double
      templateMode:
        type: boolean
      title:
        type: string
      tokens:
        type: array
        items:
          $ref: '#/definitions/VariationTokenDto'
  ApiResponseDtoÂ«CampaignDetailsDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/CampaignDetailsDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiUserInfoDto:
    type: object
    properties:
      acquisition:
        $ref: '#/definitions/ApiUserAcquisitionDto'
      attributes:
        type: object
      city:
        type: string
      company:
        type: string
      country:
        type: string
      createdOn:
        type: string
      cuid:
        type: string
      dateOfBirth:
        type: string
      devices:
        type: object
        additionalProperties:
          type: array
          items:
            $ref: '#/definitions/MapÂ«string,objectÂ»'
      email:
        type: string
      emailOptIn:
        type: boolean
      firstLoggedIn:
        type: string
      firstName:
        type: string
      gender:
        type: string
      hashedEmail:
        type: string
      hashedPhone:
        type: string
      lastActivityOn:
        type: string
      lastLoggedIn:
        type: string
      lastName:
        type: string
      licenseCode:
        type: string
      locality:
        type: string
      luid:
        type: string
      luids:
        type: array
        items:
          type: string
      phone:
        type: string
      postalCode:
        type: string
      pushOptInAndroid:
        type: boolean
      pushOptInIos:
        type: boolean
      region:
        type: string
      sessionCount:
        type: integer
        format: int64
      smsOptIn:
        type: boolean
      totalCount:
        type: integer
        format: int64
      totalTime:
        type: integer
        format: int64
      userId:
        type: string
      username:
        type: string
      webPushOptIn:
        type: boolean
  SearchAcquisitionSourceOperand:
    type: object
    properties:
      terms:
        $ref: '#/definitions/ListRuleOperand'
  VariationTokenDto:
    type: object
    properties:
      defaultValue:
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - DELETED
      tokenName:
        type: string
  ChannelStatsCriteria:
    type: object
    properties:
      channels:
        type: array
        items:
          type: string
      dimensions:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/GroupCriteria'
      endTime:
        type: integer
        format: int64
      events:
        type: array
        items:
          type: string
      limit:
        type: integer
        format: int32
      metrics:
        type: array
        items:
          type: object
      startTime:
        type: integer
        format: int64
      timeZone:
        type: string
      source:
        type: string
    description: Querying criteria to fetch the stats for channel across campaigns
  RolePrivilegesDto:
    type: object
    properties:
      entity:
        type: string
      privileges:
        type: array
        items:
          type: string
          enum:
            - CREATE
            - READ
            - UPDATE
            - DELETE
            - PUBLISH
  SchedulerInfoDto:
    type: object
    properties:
      history:
        type: object
        additionalProperties:
          type: string
      nextRuns:
        type: array
        items:
          type: integer
          format: int64
      running:
        type: boolean
  CustomEventRuleOperand:
    type: object
    properties:
      events:
        type: array
        items:
          $ref: '#/definitions/RuleEvent'
      logicalOperator:
        type: string
  ApiResponseDtoÂ«PageÂ«ExperimentStatsDtoÂ»Â»:
    type: object
    properties:
      data:
        $ref: '#/definitions/PageÂ«ExperimentStatsDtoÂ»'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiResponseDtoÂ«TrafficSegmentDetailsDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/TrafficSegmentDetailsDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  TrafficSegmentInfoDto:
    type: object
    properties:
      campaignCount:
        type: integer
        format: int32
      id:
        type: string
      name:
        type: string
      stats:
        $ref: '#/definitions/SegmentProcessingStatsDto'
      tags:
        type: array
        items:
          type: string
  UserDataAnalyticsCriteria:
    type: object
    properties:
      channels:
        type: array
        items:
          type: string
          enum:
            - PUSH_NOTIFICATION
            - EMAIL
            - SMS
            - WEB_PUSH
            - IN_APP
            - ON_SITE
            - ALL
      dimensions:
        type: array
        items:
          type: array
          items:
            $ref: '#/definitions/GroupCriteria'
      endTime:
        type: integer
        format: int64
      limit:
        type: integer
        format: int32
      metrics:
        type: array
        items:
          type: object
      source:
        type: string
      startTime:
        type: integer
        format: int64
      timeZone:
        type: string
      type:
        type: string
      users:
        $ref: '#/definitions/TrafficSegmentDto'
  ExperimentInfoDto:
    type: object
    properties:
      id:
        type: string
      status:
        type: string
      type:
        type: string
  ApiResponseDtoÂ«ListÂ«objectÂ»Â»:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  PageÂ«ExperimentStatsDtoÂ»:
    type: object
    properties:
      ascending:
        type: boolean
      contents:
        type: array
        items:
          $ref: '#/definitions/ExperimentStatsDto'
      numberOfPages:
        type: integer
        format: int32
      pageNo:
        type: integer
        format: int32
      pageSize:
        type: integer
        format: int32
      sortBy:
        type: string
      totalCount:
        type: integer
        format: int32
  ApiResponseDtoÂ«TrafficSegmentStatsDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/TrafficSegmentStatsDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiResponseDtoÂ«ListÂ«ProductCopyDtoÂ»Â»:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ProductCopyDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiResponseDtoÂ«ListÂ«TrafficSegmentInfoDtoÂ»Â»:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/TrafficSegmentInfoDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiResponseDtoÂ«booleanÂ»:
    type: object
    properties:
      data:
        type: boolean
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  BucketTSStatsDto:
    type: object
    properties:
      count:
        type: integer
        format: int64
      time:
        type: string
  TrafficSegmentTSStatsDto:
    type: object
    properties:
      buckets:
        type: array
        items:
          $ref: '#/definitions/BucketTSStatsDto'
      id:
        type: string
      licenseCode:
        type: string
  ApiResponseDtoÂ«TrafficSegmentTSStatsDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/TrafficSegmentTSStatsDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ExperimentStatsDto:
    type: object
    properties:
      category:
        type: string
      container:
        type: string
        enum:
          - CAMPAIGN
          - STANDALONE
          - JOURNEY
          - ONETIME
          - TRIGGERED
          - RECURRING
          - ALL
      conversion:
        type: number
        format: double
      createdOn:
        type: string
        format: date-time
      editable:
        type: boolean
      endDate:
        type: string
        format: date-time
      entityId:
        type: integer
        format: int32
      expired:
        type: boolean
      goalId:
        type: string
      goalStatus:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
          - DELETED
          - PAUSED
      id:
        type: string
      isTargetable:
        type: boolean
      lastModifiedById:
        type: integer
        format: int32
      lastModifiedOn:
        type: string
        format: date-time
      licenseCode:
        type: string
      order:
        type: integer
        format: int32
      productType:
        type: string
        enum:
          - SURVEY
          - FEEDBACK
          - NOTIFICATION
          - PUSH_NOTIFICATION
          - EMAIL
          - SMS
          - API_BLOCK
          - WEB_PUSH
          - JOURNEY
          - IN_APP_NOTIFICATION
          - IN_APP_SURVEY
          - ALL
      sampling:
        type: integer
        format: int32
      sdks:
        type: array
        items:
          type: integer
          format: int32
      sent:
        type: string
        enum:
          - PENDING
          - SCHEDULED
          - LOADING
          - READY
          - RUNNING
          - PAUSED
          - COMPLETED
          - FAILED
          - ON_GOING
      sentStatus:
        $ref: '#/definitions/ExperimentJobSentStatsDto'
      startDate:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - DELETED
          - OVERWHELMED
      tags:
        type: array
        items:
          type: string
      title:
        type: string
      valid:
        type: boolean
  TrafficSegmentStatsDto:
    type: object
    properties:
      buckets:
        type: object
        additionalProperties:
          type: integer
          format: int64
      id:
        type: string
      key:
        type: string
      licenseCode:
        type: string
  ApiResponseDtoÂ«TrafficSegmentDtoÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/TrafficSegmentDto'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  TrafficSegmentDetailsDto:
    type: object
    properties:
      entities:
        type: array
        items:
          $ref: '#/definitions/ExperimentInfoDto'
      stats:
        $ref: '#/definitions/SegmentProcessingStatsDto'
      trafficSegmentDto:
        $ref: '#/definitions/TrafficSegmentDto'
  ApiResponseDtoÂ«ListÂ«stringÂ»Â»:
    type: object
    properties:
      data:
        type: array
        items:
          type: string
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  'ApiResponseDtoÂ«ListÂ«MapÂ«string,stringÂ»Â»Â»':
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MapÂ«string,stringÂ»'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  'MapÂ«string,stringÂ»':
    type: object
    additionalProperties:
      type: string
  ProductCopyDto:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      type:
        type: string
  'ApiResponseDtoÂ«MapÂ«string,stringÂ»Â»':
    type: object
    properties:
      data:
        type: object
        additionalProperties:
          type: string
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  'ApiResponseDtoÂ«ListÂ«MapÂ«string,objectÂ»Â»Â»':
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/MapÂ«string,objectÂ»'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  SegmentProcessingStatsDto:
    type: object
    properties:
      events-processed:
        type: integer
        format: int32
      events-to-process:
        type: integer
        format: int32
      percentage-completed:
        type: integer
        format: int32
      processed:
        type: boolean
      reachable-users:
        type: integer
        format: int64
      segment-users:
        type: integer
        format: int64
      status:
        type: string
      total-users:
        type: integer
        format: int64
  FunnelStep:
    type: object
    properties:
      category:
        type: string
      event:
        type: string
      filters:
        $ref: '#/definitions/MultiValuedRuleOperand'
      id:
        type: string
    description: 'This include step id, event name , event category and rules'
  Funnel:
    type: object
    properties:
      id:
        type: string
      status:
        type: string
        enum:
          - DELETE
          - ACTIVE
      steps:
        type: array
        items:
          $ref: '#/definitions/FunnelStep'
      title:
        type: string
    description: 'This includes funnel title, status and funnel steps'
  ApiResponseDtoÂ«FunnelÂ»:
    type: object
    properties:
      data:
        $ref: '#/definitions/Funnel'
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
  ApiResponseDtoÂ«objectÂ»:
    type: object
    properties:
      data:
        type: object
      message:
        type: string
      status:
        type: string
      statusCode:
        type: string
